#!/bin/bash
SRC_DIR=@PROJECT_SOURCE_DIR@
BUILD_DIR=@PROJECT_BINARY_DIR@
WISH=wish-shell.tgz
DYLIBBUNDLER="@DYLIBBUNDLER@"

PD_APP=$(basename @BUNDLE@)
PD_CONTENT=$BUILD_DIR/dist/$PD_APP/Contents
PD_RESOURCES=$PD_CONTENT/Resources
PD_EXTRA=$PD_RESOURCES/extra
PD_BIN=$PD_RESOURCES/bin
PD_TCL=$PD_RESOURCES/tcl
PD_CEAMMC=$PD_EXTRA/ceammc
PD_SF2=$PD_CEAMMC/sf2

SRC_CEAMMC=$SRC_DIR/ceammc

PD_INFO="$BUILD_DIR/dist/Info.plist"
PD_ICON="$SRC_DIR/ceammc/gui/icons/pd_ceammc.icns"
PD_ICON_FILE="$SRC_DIR/ceammc/gui/icons/pd_doc.icns"
WISH_APP="@WISH_APP@"
TK_PATH="@TK_PATH@"
TCL_PATH="@TCL_PATH@"
TK_VERSION="@TK_VERSION@"
IS_SYSTEM_TK=@IS_SYSTEM_TK@

CURRENT_DATE=$(LANG=C date -u '+%d %h %Y %Z %H:%M:%S')
GIT_BRANCH=$(git --git-dir $SRC_DIR/.git symbolic-ref --short HEAD)
GIT_COMMIT=$(git --git-dir $SRC_DIR/.git describe --tags)

echo "$TK_PATH"
echo "$TCL_PATH"

CEAMMC_EXT_SRC_DIR="$SRC_DIR/ceammc/ext/src"
CEAMMC_EXT_BIN_DIR="$BUILD_DIR/ceammc/ext/src"

LIB_LEAPMOTION="@LEAPMOTION_LIBRARY@"

# set globbing
shopt -s extglob

cd "$BUILD_DIR"
mkdir -p dist
cd dist

echo "Copy Wish Shell to $PD_APP"
cp -R "${WISH_APP}" "$PD_APP"
cd "$PD_APP/Contents"

echo "Copying Info.plist..."
cp -p "$PD_INFO" .

cd Resources
rm -f Wish.icns
cp -p "$PD_ICON" "$PD_ICON_FILE" .
#mv "Wish.rsrc" Pd.rsrc
mkdir bin

echo "Copying binaries..."
cp "$BUILD_DIR/src/pd" bin
cp "$BUILD_DIR/src/pdsend" bin
cp "$BUILD_DIR/src/pdreceive" bin


echo "Copying tcl files..."
rsync -a --exclude="CMake*" --exclude="Make*" "$SRC_DIR/tcl" .
ln -s tcl Scripts
mkdir -p tcl/ceammc

echo "Copying plugins..."
cp -R $SRC_DIR/ceammc/gui/plugins/*.tcl tcl/ceammc
cp -R $SRC_DIR/ceammc/gui/plugins/*.cfg tcl/ceammc

echo "Copying docs..."
rsync -a --exclude=.DS_Store --exclude=CMake* "$SRC_DIR/doc" .
echo "Copying translations..."
mkdir -p po
cp $BUILD_DIR/po/*.msg "$PD_RESOURCES/po"

echo "Copying extensions:"
mkdir -p extra

cp $SRC_DIR/extra/*.pd extra

function extension_files() {
    find "$1" -type f | grep -e 'd_fat' -e 'd_amd64' -e 'd_i386' -e 'pd_darwin' -e '\.pd' -e '\.tcl'
}

find $BUILD_DIR/extra -maxdepth 1 -type d | sed 1d | grep -v -i cmake | while read ext_dir
do
    EXT_NAME=$(basename $ext_dir)
    echo "\t$EXT_NAME"
    mkdir extra/$EXT_NAME
    find "$ext_dir" -type f | grep -v -i cmake | grep -v Makefile | while read target
    do
        echo "\t\tCopying $(basename $target) ..."
        cp $target extra/$EXT_NAME
    done
#    cp -R "$ext_dir" extra
done

# CEAMMC staff
mkdir -p $PD_EXTRA/ceammc

echo "Copying CEAMMC dll:"
cp $CEAMMC_EXT_BIN_DIR/lib/libceammc*.dylib $PD_EXTRA/ceammc
#cp $CEAMMC_EXT_BIN_DIR/*.dylib $PD_EXTRA/ceammc

echo "Copying CEAMMC extension:"
extension_files $CEAMMC_EXT_BIN_DIR | while read f
do
    echo "\t$(basename $f)"
    cp "$f" $PD_EXTRA/ceammc
    $DYLIBBUNDLER -x $PD_EXTRA/ceammc/$(basename $f) -b -cd -d $PD_EXTRA/ceammc -p @loader_path/ -of
done

function dylib_external_fix() {
    exec=$1
    dir=$2

    $DYLIBBUNDLER -x "$exec" -b -cd -d "$dir" -p @loader_path/ -of
}

echo "Copying Additional extra:"
cp $BUILD_DIR/ceammc/extra/comport/system.serial.@(d_fat|d_amd64|d_i386|pd_darwin) $PD_EXTRA/ceammc
cp $BUILD_DIR/ceammc/extra/hcs/*.@(d_fat|d_amd64|d_i386|pd_darwin) $PD_EXTRA/ceammc
cp $SRC_DIR/ceammc/extra/hcs/*.tcl $PD_EXTRA/ceammc
dylib_external_fix $PD_EXTRA/ceammc/system.serial.@(d_fat|d_amd64|d_i386|pd_darwin) $PD_EXTRA/ceammc
dylib_external_fix $PD_EXTRA/ceammc/system.cursor.@(d_fat|d_amd64|d_i386|pd_darwin) $PD_EXTRA/ceammc
dylib_external_fix $PD_EXTRA/ceammc/system.colorpanel.@(d_fat|d_amd64|d_i386|pd_darwin) $PD_EXTRA/ceammc

echo "Copying zconf..."
mkdir -p $PD_EXTRA/zconf
cp $BUILD_DIR/ceammc/extra/flext/zconf/zconf.@(d_fat|d_amd64|d_i386|pd_darwin) $PD_EXTRA/zconf
cp $SRC_DIR/ceammc/extra/flext/zconf/zconf/zconf-help.pd $PD_EXTRA/zconf

echo "Copying libdir..."
mkdir -p $PD_EXTRA/libdir
cp $BUILD_DIR/ceammc/extra/libdir/libdir.@(d_fat|d_amd64|d_i386|pd_darwin) $PD_EXTRA/libdir
cp $SRC_DIR/ceammc/extra/libdir/libdir/libdir-help.pd $PD_EXTRA/libdir
cp $SRC_DIR/ceammc/extra/libdir/libdir/libdir-meta.pd $PD_EXTRA/libdir
cp $SRC_DIR/ceammc/extra/libdir/libdir/LICENSE.txt $PD_EXTRA/libdir

echo "Copying import..."
mkdir -p $PD_EXTRA/import
cp $BUILD_DIR/ceammc/extra/import/import.@(d_fat|d_amd64|d_i386|pd_darwin) $PD_EXTRA/import
cp $SRC_DIR/ceammc/extra/import/import-help.pd $PD_EXTRA/import
cp $SRC_DIR/ceammc/extra/import/import-meta.pd $PD_EXTRA/import
cp $SRC_DIR/ceammc/extra/import/LICENSE.txt $PD_EXTRA/import

echo "Copying VASP..."
mkdir -p $PD_EXTRA/vasp
cp $BUILD_DIR/ceammc/extra/flext/vasp.@(d_fat|d_amd64|d_i386|pd_darwin) $PD_EXTRA/vasp
cp $SRC_DIR/ceammc/extra/flext/vasp/pd/* $PD_EXTRA/vasp
cp $SRC_DIR/ceammc/extra/flext/vasp/pd-help/* $PD_EXTRA/vasp
cp $SRC_DIR/ceammc/extra/flext/vasp/gpl.txt $PD_EXTRA/vasp
cp $SRC_DIR/ceammc/extra/flext/vasp/license.txt $PD_EXTRA/vasp

echo "Copying xsample..."
mkdir -p $PD_EXTRA/xsample
cp $BUILD_DIR/ceammc/extra/flext/xsample/xsample.@(d_fat|d_amd64|d_i386|pd_darwin) $PD_EXTRA/xsample
cp $SRC_DIR/ceammc/extra/flext/xsample/xsample/pd/* $PD_EXTRA/xsample
cp $SRC_DIR/ceammc/extra/flext/xsample/xsample/pd-ex/* $PD_EXTRA/xsample
cp $SRC_DIR/ceammc/extra/flext/xsample/xsample/gpl.txt $PD_EXTRA/xsample
cp $SRC_DIR/ceammc/extra/flext/xsample/xsample/license.txt $PD_EXTRA/xsample

echo "Copying LyonPotpourri..."
mkdir -p $PD_EXTRA/lyonpotpourri/sound
cp $BUILD_DIR/ceammc/extra/lyonpotpourri/*.@(d_fat|d_amd64|d_i386|pd_darwin) $PD_EXTRA/lyonpotpourri
cp $SRC_DIR/ceammc/extra/lyonpotpourri/*-help.pd $PD_EXTRA/lyonpotpourri
cp $SRC_DIR/ceammc/extra/lyonpotpourri/LICENSE.txt $PD_EXTRA/lyonpotpourri
cp $SRC_DIR/ceammc/extra/lyonpotpourri/examples/* $PD_EXTRA/lyonpotpourri/sound

echo "Copying FFTease..."
mkdir -p $PD_EXTRA/fftease/sound
cp $BUILD_DIR/ceammc/extra/fftease/*.@(d_fat|d_amd64|d_i386|pd_darwin) $PD_EXTRA/fftease
cp $SRC_DIR/ceammc/extra/fftease/fftease/help/*.pd $PD_EXTRA/fftease
cp $SRC_DIR/ceammc/extra/fftease/fftease/LICENSE.txt $PD_EXTRA/fftease
cp $SRC_DIR/ceammc/extra/fftease/fftease/sound/* $PD_EXTRA/fftease/sound

exists() {
    [ -e "$1" ]
}

if exists $BUILD_DIR/ceammc/extra/flext/leapmotion/leapmotion.@(d_fat|d_amd64|d_i386|pd_darwin)
then
    echo "Copying LeapMotion"
    mkdir $PD_EXTRA/leapmotion
    cp $BUILD_DIR/ceammc/extra/flext/leapmotion/leapmotion.@(d_fat|d_amd64|d_i386|pd_darwin) $PD_EXTRA/leapmotion
    cp $SRC_DIR/ceammc/extra/flext/leapmotion/*.pd $PD_EXTRA/leapmotion
    cp $LIB_LEAPMOTION $PD_EXTRA/leapmotion
fi

#
echo "Copying Hoa..."
mkdir -p $PD_EXTRA/hoa
cp $BUILD_DIR/ceammc/extra/hoa/*.@(d_fat|d_amd64|d_i386|pd_darwin) $PD_EXTRA/hoa
cp $SRC_DIR/ceammc/extra/hoa/HoaLibrary-PD/Package/Hoa/helps/*.pd $PD_EXTRA/hoa

# install soundtouch~ to ceammc
echo "Copying SoundTouch external..."
cp $BUILD_DIR/ceammc/extra/SoundTouch/pd/*.@(d_fat|d_amd64|d_i386|pd_darwin) $PD_EXTRA/ceammc
cp $SRC_DIR/ceammc/extra/SoundTouch/pd/*-help.pd $PD_EXTRA/ceammc
dylib_external_fix $PD_EXTRA/ceammc/soundtouch~.@(d_fat|d_amd64|d_i386|pd_darwin) $PD_EXTRA/ceammc

echo "Copying autotune external..."
mkdir $PD_EXTRA/autotune
cp $BUILD_DIR/ceammc/extra/autotune/*.@(d_fat|d_amd64|d_i386|pd_darwin) $PD_EXTRA/autotune
cp $SRC_DIR/ceammc/extra/autotune/*-help.pd $PD_EXTRA/autotune

echo "Copying disis_munger~ external..."
mkdir $PD_EXTRA/disis_munger~
cp $BUILD_DIR/ceammc/extra/flext/disis_munger/*.@(d_fat|d_amd64|d_i386|pd_darwin) $PD_EXTRA/disis_munger~
cp $SRC_DIR/ceammc/extra/flext/disis_munger/*-help.pd $PD_EXTRA/disis_munger~

echo "Copying CEAMMC help files:"
cp $SRC_DIR/ceammc/ext/doc/*-help.pd $PD_EXTRA/ceammc
cp $SRC_DIR/ceammc/ext/doc/*.mod $PD_EXTRA/ceammc
cp $SRC_DIR/ceammc/ext/doc/*.txt $PD_EXTRA/ceammc
cp $SRC_DIR/ceammc/ext/doc/*.wav $PD_EXTRA/ceammc
# handle index file
rm $PD_EXTRA/ceammc/index-help.pd
chmod 0444 $PD_EXTRA/ceammc/*-help.pd
cp $SRC_DIR/ceammc/ext/doc/index-help.pd $PD_EXTRA
chmod 0444 $PD_EXTRA/index-help.pd
cp $SRC_DIR/ceammc/ext/ceammc_objects.txt $PD_TCL/ceammc
cp $SRC_DIR/ceammc/ext/extra_objects.txt $PD_TCL/ceammc

mkdir -p $PD_TCL/ceammc/user_objects
cp $(find $SRC_DIR/ceammc/ext/class-wrapper/modules -name 'completion_*.txt') $PD_TCL/ceammc/user_objects

echo "Copy about file..."
cat $BUILD_DIR/ceammc/ext/doc/about.pd | sed "s/%GIT_BRANCH%/$GIT_BRANCH/g" | \
   sed "s/%GIT_COMMIT%/$GIT_COMMIT/g" | \
   sed "s/%BUILD_DATE%/$CURRENT_DATE/g" > $PD_EXTRA/ceammc/about.pd
chmod 0444 $PD_EXTRA/ceammc/about.pd

echo "Copying license..."
cp $SRC_DIR/License.txt Scripts

echo "Copying STK rawwaves..."
mkdir -p $PD_EXTRA/ceammc/stk
cp $SRC_DIR/ceammc/extra/stk/stk/rawwaves/*.raw $PD_EXTRA/ceammc/stk

echo "Copying libs..."
NEWLIBPATH="@executable_path/../lib"
EXECFILE="Resources/bin/pd"
LIBDIR="Resources/lib"
cd ..
# to make codesign happy
mkdir -p Frameworks
mkdir -p $LIBDIR

$DYLIBBUNDLER -x $EXECFILE -b -cd -d $LIBDIR -p $NEWLIBPATH -of
$DYLIBBUNDLER -x "Resources/bin/pdsend" -b -cd -d $LIBDIR -p $NEWLIBPATH -of
$DYLIBBUNDLER -x "Resources/bin/pdreceive" -b -cd -d $LIBDIR -p $NEWLIBPATH -of

#copy Tcl${TK_VERSION}
if [ $IS_SYSTEM_TK -eq 0 ]
then
    echo "Copying TCL/Tk Frameworks..."
    cp -R "${TK_PATH}" Frameworks
    cp -R "${TCL_PATH}" Frameworks
    rm -rf "./Frameworks/Tk.framework/Versions/${TK_VERSION}/Resources/Wish.app"
    rm -rf "./Frameworks/Tcl.framework/Versions/${TK_VERSION}/Resources/Documentation"

    echo "Tk link fix..."
    /usr/bin/otool -LX $PD_CONTENT/MacOS/Wish | cut -f2 | cut -d ' ' -f1 | grep -e Tk -e Tcl | while read framework
    do
        newpath=$(echo $framework | sed 's|/Library/Frameworks/||')
        install_name_tool -change $framework "@executable_path/../Frameworks/$newpath" $PD_CONTENT/MacOS/Wish
    done
fi

echo "Copying headers..."
mkdir -p $PD_RESOURCES/include
cp $SRC_DIR/src/m_pd.h $PD_RESOURCES/include

echo "Copying cmake files..."
CMAKE_DIR=$PD_RESOURCES/share/pd/cmake
echo $CMAKE_DIR
mkdir -p $CMAKE_DIR
cp $SRC_DIR/cmake/PdExternal.cmake $CMAKE_DIR

echo "Copying abstractions..."
cp $SRC_DIR/ceammc/ext/abstractions/*.pd $PD_CEAMMC

echo "Copying class wrapper objects..."
for wrapper in $BUILD_DIR/ceammc/ext/class-wrapper/*.@(d_fat|d_amd64|d_i386|pd_darwin)
do
    fname=$(basename $wrapper)
    mod_name=$(echo $fname | cut -d. -f1)
    mod_path=$PD_CEAMMC
    mkdir $mod_path
    cp $wrapper $mod_path
    dylib_external_fix $mod_path/$fname $PD_CEAMMC
    cp -R $SRC_DIR/ceammc/ext/class-wrapper/modules/$mod_name/help/*.pd $mod_path
done


echo "Sound fonts..."
mkdir -p $PD_SF2
cp $SRC_CEAMMC/extra/sf2/* $PD_SF2

cd ../../..
